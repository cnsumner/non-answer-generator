# Use Rust docker image, see: https://hub.docker.com/_/rust/
image: ekidd/rust-musl-builder:latest

# Defines stages which are to be executed
stages:
  - build

# Run `cargo build` for the project with stable Rust
# build-linux:
#   stage: build
#   image: ekidd/rust-musl-builder:latest
#   script:
#   - rustc --version && cargo --version
#   - cargo build --release --jobs 1
#   artifacts:
#     paths:
#       - target
#   cache:
#     paths:
#       - target/
#       - .cargo/
#   variables:
#     GIT_STRATEGY: fetch
#     CARGO_HOME: "$CI_PROJECT_DIR/.cargo"

build-windows:
  stage: build
  image: ekidd/rust-musl-builder:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
  - curl -fsSL https://get.docker.com -o get-docker.sh
  - sh get-docker.sh
  - dockerd
  - docker version
  - rustup target add x86_64-pc-windows-gnu
  - cargo install cross
  - PATH=$CI_PROJECT_DIR/.cargo/bin:$PATH
  - cross build --release --target x86_64-pc-windows-gnu --jobs 1
  artifacts:
    paths:
      - target
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - target/
      - .cargo/
  variables:
    GIT_STRATEGY: fetch
    CARGO_HOME: "$CI_PROJECT_DIR/.cargo"
