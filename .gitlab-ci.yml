image: ekidd/rust-musl-builder:latest

stages:
  - build

build-linux:
  stage: build
  image: ekidd/rust-musl-builder:latest
  script:
  - rustc --version && cargo --version
  - cargo build --release --jobs 1
  - cp target/release/non-answer-generator ./non-answer-generator
  - cp example/config.json ./config.json
  artifacts:
    paths:
      - non-answer-generator
      - config.json
      - README.md
  cache:
    paths:
      - target/
      - .cargo/
  variables:
    GIT_STRATEGY: fetch
    CARGO_HOME: "$CI_PROJECT_DIR/.cargo"

# build-windows:
#   stage: build
#   image: ubuntu:16.04
#   # services:
#   #   - docker:dind
#   # variables:
#   #   DOCKER_HOST: tcp://docker:2375
#   #   DOCKER_DRIVER: overlay2
#   before_script:
#     - sudo apt-get update
#     - sudo apt-get install -y gcc
#   script:
#     - curl https://sh.rustup.rs -sSf | sh -s -- -y
#     - PATH=$CI_PROJECT_DIR/.cargo/bin:$PATH
#     - rustup default stable && \
#       rustup target add x86_64-unknown-linux-musl && \
#       rustup target add x86_64-apple-darwin && \
#       rustup target add x86_64-pc-windows-gnu
#     - rustup target add x86_64-pc-windows-gnu
#     - cargo install cross
#
#     - cross build --release --target x86_64-pc-windows-gnu --jobs 1
#   artifacts:
#     paths:
#       - target
#   cache:
#     key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
#     paths:
#       - target/
#       - .cargo/
#   variables:
#     GIT_STRATEGY: fetch
#     CARGO_HOME: "$CI_PROJECT_DIR/.cargo"
